# A generic, single database configuration.

[alembic]
# path to migration scripts
script_location = alembic

# template for migration file names, e.g. "%%(rev)s_%%(slug)s.py"
# "%(rev)s" is the short revision string
# "%(year)d" / "%(month).2d" / "%(day).2d" / "%(hour).2d" / "%(minute).2d" /
# "%(second).2d" are set based on the migration creation time
# "%(slug)s" is a descriptive name of the migration
# %% character specifies a literal percentage sign
#
# Example:
# file_template = %%(rev)s_%%(slug)s

# timezone to use when rendering the date within the migration file
# as well as the filename.
# If specified, requires the python-dateutil library that can be
# installed using pip install python-dateutil.
# Specify as an Olson timezone database identifier, e.g.
# America/New_York
# timezone =

# max length of characters to apply to the %%(slug)s field
# truncate_slug_length = 40

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false

# set to 'true' to require revision titles to be prepended with the version
# stamp, e.g. 'ae1027a6acf_add_a_column.py'
# append_version_stamp_to_slug = false

# set to 'true' to always use UTC dates inside the migration script
# generating process, regardless of the timezone configured.
# output_encoding = utf-8

# sqlalchemy.url = driver://user:pass@host/database
sqlalchemy.url = sqlite:///db/narratix.db

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %%(levelname)-5.5s [%%(name)s] %%(message)s
datefmt = %%H:%%M:%%S
